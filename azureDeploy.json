{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "defaultValue": "myroot",
      "type": "securestring"
    },
    "rpsImageName": {
      "defaultValue": "rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "authEnabled": {
      "defaultValue": "true",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "corsHeaders": {
      "defaultValue": "Origin, X-Requested-With, Accept, X-MPS-API-Key,x-rps-api-key, Content-Type, csrf-token, authorization",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "defaultValue": "standalone",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "defaultValue": "G@ppm0ym",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsUsername": {
      "defaultValue": "standalone",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsPassword": {
      "defaultValue": "G@ppm0ym",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsSessionEncryptionKey": {
      "defaultValue": "<YourStrongSessionEncryptionKey123!>",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsXAPIKey": {
      "defaultValue": "APIKEYFORMPS123!",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "rpsXAPIKey": {
      "defaultValue": "APIKEYFORRPS123!",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_WEB_TLS_CERT",
                  "value": "../private/mpsserver-cert-public.crt"
                },
                {
                  "name": "RPS_WEB_TLS_CERT_KEY",
                  "value": "../private/mpsserver-cert-private.key"
                },
                {
                  "name": "RPS_ROOT_CA_CERT",
                  "value": "../private/root-cert-public.crt"
                },
                {
                  "name": "RPS_CORS_ORIGIN",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "RPS_CORS_HEADERS",
                  "value": "[parameters('corsHeaders')]"
                },
                {
                  "name": "RPS_XAPIKEY",
                  "value": "[parameters('rpsXAPIKey')]"
                },
                {
                  "name": "RPS_USER",
                  "value": "[parameters('mpsUsername')]"
                },
                {
                  "name": "RPS_PASSWORD",
                  "value": "[parameters('mpsPassword')]"
                },
                {
                  "name": "RPS_CORS_ALLOW_CREDENTIALS",
                  "value": "true"
                },
                {
                  "name": "RPS_MPS_SERVER",
                  "value": "https://127.0.0.1:3000"
                }
              ],
              "command": [
                "/bin/bash",
                "-c",
                "while ! nc -z localhost 3000;\ndo\necho waiting for mps;\nsleep 5;\ndone;\necho MPS Running!;\nnode ./dist/Index.js;"
              ],
              "volumeMounts": [
                {
                  "name": "private",
                  "mountPath": "/rcs-microservice/private"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_CORS_ORIGIN",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_CORS_HEADERS",
                  "value": "[parameters('corsHeaders')]"
                },
                {
                  "name": "MPS_AUTH_ENABLED",
                  "value": "[parameters('authEnabled')]"
                },
                {
                  "name": "MPS_USE_ALLOWLIST",
                  "value": "[parameters('useAllowlist')]"
                },
                {
                  "name": "MPS_XAPIKEY",
                  "value": "[parameters('mpsXAPIKey')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_USERNAME",
                  "value": "[parameters('mpsUsername')]"
                },
                {
                  "name": "MPS_PASS",
                  "value": "[parameters('mpsPassword')]"
                },
                {
                  "name": "MPS_USE_DB",
                  "value": "true"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ],
              "volumeMounts": [
                {
                  "name": "private",
                  "mountPath": "/mps-microservice/private"
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 443
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:3000')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8081')]"
                },
                {
                  "name": "MPSXAPIKEY",
                  "value": "[parameters('mpsXAPIKey')]"
                },
                {
                  "name": "RPSXAPIKEY",
                  "value": "[parameters('rpsXAPIKey')]"
                },
                {
                  "name": "AUTH_MODE_ENABLED",
                  "value": "[parameters('authEnabled')]"
                }                
              ],
              "volumeMounts": [
                {
                  "name": "private",
                  "mountPath": "/etc/nginx/certs"
                },
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "rpsdb",
            "properties": {
              "image": "postgres:latest",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "postgresdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "ip": "168.61.3.88",
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 8080
            },
            {
              "protocol": "tcp",
              "port": 8081
            },
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 3000
            },
            {
              "protocol": "tcp",
              "port": 443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KKiBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMjANCiogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjANCioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovDQoNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGNpcmFjb25maWdzKA0KICAgICAgY2lyYV9jb25maWdfbmFtZSB2YXJjaGFyKDQwKSwNCiAgICAgIG1wc19zZXJ2ZXJfYWRkcmVzcyB2YXJjaGFyKDI1NiksDQogICAgICBtcHNfcG9ydCBpbnRlZ2VyLA0KICAgICAgdXNlcl9uYW1lIHZhcmNoYXIoNDApLA0KICAgICAgcGFzc3dvcmQgdmFyY2hhcig2MyksDQogICAgICBjb21tb25fbmFtZSB2YXJjaGFyKDI1NiksDQogICAgICBzZXJ2ZXJfYWRkcmVzc19mb3JtYXQgaW50ZWdlciwgDQogICAgICBhdXRoX21ldGhvZCBpbnRlZ2VyLCANCiAgICAgIG1wc19yb290X2NlcnRpZmljYXRlIHRleHQsIA0KICAgICAgcHJveHlkZXRhaWxzIHRleHQsDQogICAgICBDT05TVFJBSU5UIGNvbmZpZ25hbWUgVU5JUVVFKGNpcmFfY29uZmlnX25hbWUpDQogICAgKTsNCkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIG5ldHdvcmtjb25maWdzKA0KICAgICAgbmV0d29ya19wcm9maWxlX25hbWUgdmFyY2hhcig0MCksDQogICAgICBkaGNwX2VuYWJsZWQgQk9PTEVBTiwNCiAgICAgIHN0YXRpY19pcF9zaGFyZWQgQk9PTEVBTiwNCiAgICAgIGlwX3N5bmNfZW5hYmxlZCBCT09MRUFOLA0KICAgICAgQ09OU1RSQUlOVCBuZXR3b3JrcHJvZmlsZW5hbWUgVU5JUVVFKG5ldHdvcmtfcHJvZmlsZV9uYW1lKQ0KICAgICk7DQpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwcm9maWxlcygNCiAgICAgIHByb2ZpbGVfbmFtZSB2YXJjaGFyKDQwKSwNCiAgICAgIGFjdGl2YXRpb24gdmFyY2hhcigyMCksDQogICAgICBhbXRfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogICAgICBjb25maWd1cmF0aW9uX3NjcmlwdCB0ZXh0LA0KICAgICAgY2lyYV9jb25maWdfbmFtZSB2YXJjaGFyKDQwKSBSRUZFUkVOQ0VTIGNpcmFjb25maWdzKGNpcmFfY29uZmlnX25hbWUpLA0KICAgICAgZ2VuZXJhdGVfcmFuZG9tX3Bhc3N3b3JkIEJPT0xFQU4sDQogICAgICByYW5kb21fcGFzc3dvcmRfY2hhcmFjdGVycyB2YXJjaGFyKDEwMCksDQogICAgICByYW5kb21fcGFzc3dvcmRfbGVuZ3RoIGludGVnZXIsDQogICAgICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgICAgIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogICAgICBuZXR3b3JrX3Byb2ZpbGVfbmFtZSB2YXJjaGFyKDQwKSBSRUZFUkVOQ0VTIG5ldHdvcmtjb25maWdzKG5ldHdvcmtfcHJvZmlsZV9uYW1lKSwNCiAgICAgIG1lYnhfcGFzc3dvcmQgdmFyY2hhcig0MCksDQogICAgICBnZW5lcmF0ZV9yYW5kb21fbWVieF9wYXNzd29yZCBCT09MRUFOLA0KICAgICAgcmFuZG9tX21lYnhfcGFzc3dvcmRfbGVuZ3RoIGludGVnZXIsDQogICAgICBDT05TVFJBSU5UIG5hbWUgVU5JUVVFKHByb2ZpbGVfbmFtZSkNCiAgICApOw0KQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZG9tYWlucygNCiAgICAgIG5hbWUgdmFyY2hhcig0MCksDQogICAgICBkb21haW5fc3VmZml4IHZhcmNoYXIoNDApLA0KICAgICAgcHJvdmlzaW9uaW5nX2NlcnQgdGV4dCwNCiAgICAgIHByb3Zpc2lvbmluZ19jZXJ0X3N0b3JhZ2VfZm9ybWF0IHZhcmNoYXIoNDApLA0KICAgICAgcHJvdmlzaW9uaW5nX2NlcnRfa2V5IHRleHQsDQogICAgICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwNCiAgICAgIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksDQogICAgICBDT05TVFJBSU5UIGRvbWFpbm5hbWUgVU5JUVVFKG5hbWUpLA0KICAgICAgQ09OU1RSQUlOVCBkb21haW5zdWZmaXggVU5JUVVFKGRvbWFpbl9zdWZmaXgpDQogICAgKTsNCg0KSU5TRVJUIElOVE8gcHVibGljLm5ldHdvcmtjb25maWdzKA0KICBuZXR3b3JrX3Byb2ZpbGVfbmFtZSwgZGhjcF9lbmFibGVkLCBzdGF0aWNfaXBfc2hhcmVkLCBpcF9zeW5jX2VuYWJsZWQpIA0KICB2YWx1ZXMoJ2RoY3BfZGlzYWJsZWQnLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSk7DQpJTlNFUlQgSU5UTyBwdWJsaWMubmV0d29ya2NvbmZpZ3MoDQogIG5ldHdvcmtfcHJvZmlsZV9uYW1lLCBkaGNwX2VuYWJsZWQsIHN0YXRpY19pcF9zaGFyZWQsIGlwX3N5bmNfZW5hYmxlZCkgIA0KICB2YWx1ZXMoJ2RoY3BfZW5hYmxlZCcsIHRydWUsIGZhbHNlLCB0cnVlKTs="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsKICAgIGxpc3RlbiA4MCBkZWZhdWx0X3NlcnZlcjsKICAgIGxpc3RlbiBbOjpdOjgwIGRlZmF1bHRfc2VydmVyOwogICAgc2VydmVyX25hbWUgXzsKICAgIHJldHVybiAzMDcgaHR0cHM6Ly8kaG9zdCRyZXF1ZXN0X3VyaTsKfQoKc2VydmVyIHsKICAgIGxpc3RlbiBbOjpdOjQ0MyBzc2w7CiAgICBsaXN0ZW4gICAgICAgICAgNDQzIHNzbDsKCiAgICAgICAgIyBQcm90ZWN0IGFnYWluc3QgdGhlIEJFQVNUIGF0dGFjayBieSBub3QgdXNpbmcgU1NMdjMgYXQgYWxsLiBJZiB5b3UgbmVlZCB0byBzdXBwb3J0IG9sZGVyIGJyb3dzZXJzIChJRTYpIHlvdSBtYXkgbmVlZCB0byBhZGQKICAgICMgU1NMdjMgdG8gdGhlIGxpc3Qgb2YgcHJvdG9jb2xzIGJlbG93LgogICAgc3NsX3Byb3RvY29scyAgIFRMU3YxLjI7CgogICAgc2VydmVyX25hbWUgICAgIGxvY2FsaG9zdDsKICAgIAogICAgIyBDaXBoZXJzIHNldCB0byBiZXN0IGFsbG93IHByb3RlY3Rpb24gZnJvbSBCZWFzdCwgd2hpbGUgcHJvdmlkaW5nIGZvcndhcmRpbmcgc2VjcmVjeSwgYXMgZGVmaW5lZCBieSBNb3ppbGxhIC0gaHR0cHM6Ly93aWtpLm1vemlsbGEub3JnL1NlY3VyaXR5L1NlcnZlcl9TaWRlX1RMUyNOZ2lueAogICAgc3NsX2NpcGhlcnMgICAgICAgICAgICAgICAgRUNESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2OkVDREhFLUVDRFNBLUFFUzEyOC1HQ00tU0hBMjU2OkVDREhFLVJTQS1BRVMyNTYtR0NNLVNIQTM4NDpFQ0RIRS1FQ0RTQS1BRVMyNTYtR0NNLVNIQTM4NDpESEUtUlNBLUFFUzEyOC1HQ00tU0hBMjU2OkRIRS1EU1MtQUVTMTI4LUdDTS1TSEEyNTY6a0VESCtBRVNHQ006RUNESEUtUlNBLUFFUzEyOC1TSEEyNTY6RUNESEUtRUNEU0EtQUVTMTI4LVNIQTI1NjpFQ0RIRS1SU0EtQUVTMTI4LVNIQTpFQ0RIRS1FQ0RTQS1BRVMxMjgtU0hBOkVDREhFLVJTQS1BRVMyNTYtU0hBMzg0OkVDREhFLUVDRFNBLUFFUzI1Ni1TSEEzODQ6RUNESEUtUlNBLUFFUzI1Ni1TSEE6RUNESEUtRUNEU0EtQUVTMjU2LVNIQTpESEUtUlNBLUFFUzEyOC1TSEEyNTY6REhFLVJTQS1BRVMxMjgtU0hBOkRIRS1EU1MtQUVTMTI4LVNIQTI1NjpESEUtUlNBLUFFUzI1Ni1TSEEyNTY6REhFLURTUy1BRVMyNTYtU0hBOkRIRS1SU0EtQUVTMjU2LVNIQTpBRVMxMjgtR0NNLVNIQTI1NjpBRVMyNTYtR0NNLVNIQTM4NDpFQ0RIRS1SU0EtUkM0LVNIQTpFQ0RIRS1FQ0RTQS1SQzQtU0hBOkFFUzEyODpBRVMyNTY6UkM0LVNIQTpISUdIOiFhTlVMTDohZU5VTEw6IUVYUE9SVDohREVTOiEzREVTOiFNRDU6IVBTSzsKICAgIHNzbF9wcmVmZXJfc2VydmVyX2NpcGhlcnMgIG9uOwoKICAgICMgT3B0aW1pemUgU1NMIGJ5IGNhY2hpbmcgc2Vzc2lvbiBwYXJhbWV0ZXJzIGZvciAxMCBtaW51dGVzLiBUaGlzIGN1dHMgZG93biBvbiB0aGUgbnVtYmVyIG9mIGV4cGVuc2l2ZSBTU0wgaGFuZHNoYWtlcy4KICAgICMgVGhlIGhhbmRzaGFrZSBpcyB0aGUgbW9zdCBDUFUtaW50ZW5zaXZlIG9wZXJhdGlvbiwgYW5kIGJ5IGRlZmF1bHQgaXQgaXMgcmUtbmVnb3RpYXRlZCBvbiBldmVyeSBuZXcvcGFyYWxsZWwgY29ubmVjdGlvbi4KICAgICMgQnkgZW5hYmxpbmcgYSBjYWNoZSAob2YgdHlwZSAic2hhcmVkIGJldHdlZW4gYWxsIE5naW54IHdvcmtlcnMiKSwgd2UgdGVsbCB0aGUgY2xpZW50IHRvIHJlLXVzZSB0aGUgYWxyZWFkeSBuZWdvdGlhdGVkIHN0YXRlLgogICAgIyBGdXJ0aGVyIG9wdGltaXphdGlvbiBjYW4gYmUgYWNoaWV2ZWQgYnkgcmFpc2luZyBrZWVwYWxpdmVfdGltZW91dCwgYnV0IHRoYXQgc2hvdWxkbid0IGJlIGRvbmUgdW5sZXNzIHlvdSBzZXJ2ZSBwcmltYXJpbHkgSFRUUFMuCiAgICBzc2xfc2Vzc2lvbl9jYWNoZSAgICBzaGFyZWQ6U1NMOjEwbTsgIyBhIDFtYiBjYWNoZSBjYW4gaG9sZCBhYm91dCA0MDAwIHNlc3Npb25zLCBzbyB3ZSBjYW4gaG9sZCA0MDAwMCBzZXNzaW9ucwogICAgc3NsX3Nlc3Npb25fdGltZW91dCAgMjRoOwoKICAgICMgVXNlIGEgaGlnaGVyIGtlZXBhbGl2ZSB0aW1lb3V0IHRvIHJlZHVjZSB0aGUgbmVlZCBmb3IgcmVwZWF0ZWQgaGFuZHNoYWtlcwogICAga2VlcGFsaXZlX3RpbWVvdXQgMzAwOyAjIHVwIGZyb20gNzUgc2VjcyBkZWZhdWx0CgogICAgaW5kZXggaW5kZXguaHRtbDsKCiAgICBzc2xfY2VydGlmaWNhdGUgICAgICAvZXRjL25naW54L2NlcnRzL21wc3NlcnZlci1jZXJ0LXB1YmxpYy5jcnQ7CiAgICBzc2xfY2VydGlmaWNhdGVfa2V5ICAvZXRjL25naW54L2NlcnRzL21wc3NlcnZlci1jZXJ0LXByaXZhdGUua2V5OwoKICAgICNjaGFyc2V0IGtvaTgtcjsKICAgICNhY2Nlc3NfbG9nICAvdmFyL2xvZy9uZ2lueC9ob3N0LmFjY2Vzcy5sb2cgIG1haW47CgogICAgbG9jYXRpb24gLyB7CiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsKICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07CiAgICB9CgogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsKCiAgICAjIHJlZGlyZWN0IHNlcnZlciBlcnJvciBwYWdlcyB0byB0aGUgc3RhdGljIHBhZ2UgLzUweC5odG1sCiAgICAjCiAgICBlcnJvcl9wYWdlICAgNTAwIDUwMiA1MDMgNTA0ICAvNTB4Lmh0bWw7CiAgICBsb2NhdGlvbiA9IC81MHguaHRtbCB7CiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsKICAgIH0KCn0KCg=="
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}