{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "type": "securestring",
      "metadata": {
        "description": "Specifies the root token to use for Vault in DEV mode"
      }
    },
    "rpsImageName": {
      "defaultValue": "rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "tokenExpiration": {
      "defaultValue": "1440",
      "type": "string",
      "metadata": {
        "description": "Specifies the duration (in minutes) that a token will be valid for"
      }
    },
    "jwtSecret": {
      "defaultValue": "supersecret",
      "type": "securestring",
      "metadata": {
        "description": "Specifies the secret to use when generating JWT Tokens"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_JWT_EXPIRATION",
                  "value": "[parameters('tokenExpiration')]"
                },
                {
                  "name": "MPS_JWT_SECRET",
                  "value": "[parameters('jwtSecret')]"
                },
                {
                  "name": "MPS_VAULT_TOKEN",
                  "value": "[parameters('vaultToken')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                }
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:2.3",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:latest",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "ip": "168.61.3.88",
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgY2lyYWNvbmZpZ3MoCiAgY2lyYV9jb25maWdfbmFtZSBjaXRleHQgTk9UIE5VTEwsCiAgbXBzX3NlcnZlcl9hZGRyZXNzIHZhcmNoYXIoMjU2KSwKICBtcHNfcG9ydCBpbnRlZ2VyLAogIHVzZXJfbmFtZSB2YXJjaGFyKDQwKSwKICBwYXNzd29yZCB2YXJjaGFyKDYzKSwKICBjb21tb25fbmFtZSB2YXJjaGFyKDI1NiksCiAgc2VydmVyX2FkZHJlc3NfZm9ybWF0IGludGVnZXIsIAogIGF1dGhfbWV0aG9kIGludGVnZXIsIAogIG1wc19yb290X2NlcnRpZmljYXRlIHRleHQsIAogIHByb3h5ZGV0YWlscyB0ZXh0LAogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwKICBQUklNQVJZIEtFWSAoY2lyYV9jb25maWdfbmFtZSwgdGVuYW50X2lkKQopOwpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyB3aXJlbGVzc2NvbmZpZ3MoCiAgd2lyZWxlc3NfcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwKICBhdXRoZW50aWNhdGlvbl9tZXRob2QgaW50ZWdlciwKICBlbmNyeXB0aW9uX21ldGhvZCBpbnRlZ2VyLAogIHNzaWQgdmFyY2hhcigzMiksCiAgcHNrX3ZhbHVlIGludGVnZXIsCiAgcHNrX3Bhc3NwaHJhc2UgdmFyY2hhcig2MyksCiAgbGlua19wb2xpY3kgaW50W10sCiAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsCiAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwKICB0ZW5hbnRfaWQgdmFyY2hhcigzNikgTk9UIE5VTEwsCiAgUFJJTUFSWSBLRVkgKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSwgdGVuYW50X2lkKQopOwpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBwcm9maWxlcygKICBwcm9maWxlX25hbWUgY2l0ZXh0IE5PVCBOVUxMLAogIGFjdGl2YXRpb24gdmFyY2hhcigyMCkgTk9UIE5VTEwsCiAgYW10X3Bhc3N3b3JkIHZhcmNoYXIoNDApLAogIGdlbmVyYXRlX3JhbmRvbV9wYXNzd29yZCBCT09MRUFOIE5PVCBOVUxMLAogIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0LAogIEZPUkVJR04gS0VZIChjaXJhX2NvbmZpZ19uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgY2lyYWNvbmZpZ3MoY2lyYV9jb25maWdfbmFtZSx0ZW5hbnRfaWQpLAogIGNyZWF0aW9uX2RhdGUgdGltZXN0YW1wLAogIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksCiAgbWVieF9wYXNzd29yZCB2YXJjaGFyKDQwKSwKICBnZW5lcmF0ZV9yYW5kb21fbWVieF9wYXNzd29yZCBCT09MRUFOIE5PVCBOVUxMLAogIHRhZ3MgdGV4dFtdLAogIGRoY3BfZW5hYmxlZCBCT09MRUFOLAogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwKICBQUklNQVJZIEtFWSAocHJvZmlsZV9uYW1lLCB0ZW5hbnRfaWQpCik7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2ZpbGVzX3dpcmVsZXNzY29uZmlncygKICB3aXJlbGVzc19wcm9maWxlX25hbWUgY2l0ZXh0LAogIHByb2ZpbGVfbmFtZSBjaXRleHQsCiAgRk9SRUlHTiBLRVkgKHdpcmVsZXNzX3Byb2ZpbGVfbmFtZSx0ZW5hbnRfaWQpICBSRUZFUkVOQ0VTIHdpcmVsZXNzY29uZmlncyh3aXJlbGVzc19wcm9maWxlX25hbWUsdGVuYW50X2lkKSwKICBGT1JFSUdOIEtFWSAocHJvZmlsZV9uYW1lLHRlbmFudF9pZCkgIFJFRkVSRU5DRVMgcHJvZmlsZXMocHJvZmlsZV9uYW1lLHRlbmFudF9pZCksCiAgcHJpb3JpdHkgaW50ZWdlciwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLAogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwKICBQUklNQVJZIEtFWSAod2lyZWxlc3NfcHJvZmlsZV9uYW1lLCBwcm9maWxlX25hbWUsIHByaW9yaXR5LCB0ZW5hbnRfaWQpCik7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGRvbWFpbnMoCiAgbmFtZSBjaXRleHQgTk9UIE5VTEwsCiAgZG9tYWluX3N1ZmZpeCBjaXRleHQgTk9UIE5VTEwsCiAgcHJvdmlzaW9uaW5nX2NlcnQgdGV4dCwKICBwcm92aXNpb25pbmdfY2VydF9zdG9yYWdlX2Zvcm1hdCB2YXJjaGFyKDQwKSwKICBwcm92aXNpb25pbmdfY2VydF9rZXkgdGV4dCwKICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICBjcmVhdGVkX2J5IHZhcmNoYXIoNDApLAogIHRlbmFudF9pZCB2YXJjaGFyKDM2KSBOT1QgTlVMTCwKICBDT05TVFJBSU5UIGRvbWFpbnN1ZmZpeCBVTklRVUUoZG9tYWluX3N1ZmZpeCx0ZW5hbnRfaWQpLAogIFBSSU1BUlkgS0VZIChuYW1lLCB0ZW5hbnRfaWQpCik7CgpDUkVBVEUgVU5JUVVFIElOREVYIGxvd2VyX25hbWVfc3VmZml4X2lkeCBPTiBkb21haW5zICgobG93ZXIobmFtZSkpLCAobG93ZXIoZG9tYWluX3N1ZmZpeCkpKTs="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "X2Zvcm1hdF92ZXJzaW9uOiAiMi4xIg0KX3RyYW5zZm9ybTogdHJ1ZQ0KDQpzZXJ2aWNlczoNCi0gbmFtZTogbXBzLXJlc3QNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDMwMDANCiAgdGFnczoNCiAgLSBtcHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IG1wcy1sb2dpbi1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9tcHMvbG9naW4NCiAgLSBuYW1lOiBtcHMtcmVsYXktcm91dGUNCiAgICBzdHJpcF9wYXRoOiB0cnVlDQogICAgcGF0aHM6DQogICAgLSAvbXBzL3dzDQogIC0gbmFtZTogbXBzLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcw0KDQotIG5hbWU6IHJwcy1yZXN0DQogIGhvc3Q6IDEyNy4wLjAuMQ0KICBwb3J0OiA4MDgxICANCiAgdGFnczoNCiAgLSBycHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IHJwcy1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9ycHMNCg0KLSBuYW1lOiBycHMtd3MNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgwODANCiAgdGFnczoNCiAgLSBycHMNCiAgcm91dGVzOg0KICAtIG5hbWU6IHJwcy1hY3RpdmF0ZS1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9hY3RpdmF0ZQ0KDQotIG5hbWU6IHdlYg0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODANCiAgdGFnczoNCiAgLSB3ZWINCiAgcm91dGVzOg0KICAtIG5hbWU6IHdlYi1yb3V0ZQ0KICAgIHBhdGhzOg0KICAgIC0gLw0KDQpwbHVnaW5zOg0KLSBuYW1lOiBjb3JzIA0KLSBuYW1lOiBqd3QNCiAgcm91dGU6IHJwcy1yb3V0ZQ0KICBjb25maWc6DQogICAgY2xhaW1zX3RvX3ZlcmlmeToNCiAgICAtIGV4cA0KLSBuYW1lOiBqd3QNCiAgcm91dGU6IG1wcy1yb3V0ZQ0KICBjb25maWc6DQogICAgY2xhaW1zX3RvX3ZlcmlmeToNCiAgICAtIGV4cA0KDQpjb25zdW1lcnM6DQogIC0gdXNlcm5hbWU6IGFkbWluDQpqd3Rfc2VjcmV0czoNCiAgLSBjb25zdW1lcjogYWRtaW4NCiAgICBrZXk6IDlFbVJKVGJJaUliNGJJZVNzbWdjV0lqclI2SHlFVHFjICNzYW1wbGUga2V5DQogICAgc2VjcmV0OiAic3VwZXJzZWNyZXQiDQo="
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}