{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "containerStackName": {
      "type": "string",
      "defaultValue": "open-amt-cloud-toolkit"
    },
    "registry": {
      "type": "string",
      "metadata": {
        "description": "Name of the Registry."
      }
    },
    "registryUsername": {
      "type": "securestring",
      "metadata": {
        "description": "Username for the registry"
      }
    },
    "registryPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the registry"
      }
    },
    "vaultToken": {
      "defaultValue": "myroot",
      "type": "securestring"
    },
    "rpsImageName": {
      "defaultValue": "rps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the RPS image to deploy from specified registry"
      }
    },
    "mpsImageName": {
      "defaultValue": "mps:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the MPS image to deploy from specified registry"
      }
    },
    "sampleWebUIImageName": {
      "defaultValue": "webui:latest",
      "type": "string",
      "metadata": {
        "description": "Name of the Sample WebUI image to deploy from specified registry"
      }
    },
    "fqdn": {
      "type": "string",
      "metadata": {
        "description": "Name of the FQDN you wish to use to access this deployment (i.e. \"sample\" will result in an FQDN of sample.westus.azurecontainer.io)"
      }
    },
    "useAllowlist": {
      "defaultValue": "false",
      "type": "string",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminUsername": {
      "defaultValue": "standalone",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsAdminPassword": {
      "defaultValue": "G@ppm0ym",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsUsername": {
      "defaultValue": "standalone",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    },
    "mpsPassword": {
      "defaultValue": "G@ppm0ym",
      "type": "securestring",
      "metadata": {
        "description": "For details on this property view the configuration documentation located under \"Microservices\" in the Open AMT Cloud Toolkit documentation on https://open-amt-cloud-toolkit.github.io/docs/"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "name": "[parameters('containerStackName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": "Standard",
        "containers": [
          {
            "name": "rps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('rpsImageName'))]",
              "ports": [
                {
                  "port": 8080
                },
                {
                  "port": 8081
                }
              ],
              "environmentVariables": [
                {
                  "name": "RPS_USER",
                  "value": "[parameters('mpsUsername')]"
                },
                {
                  "name": "RPS_PASSWORD",
                  "value": "[parameters('mpsPassword')]"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "mps",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('mpsImageName'))]",
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              },
              "environmentVariables": [
                {
                  "name": "MPS_COMMON_NAME",
                  "value": "[concat(parameters('fqdn'), '.', parameters('location'),'.azurecontainer.io')]"
                },
                {
                  "name": "MPS_USE_ALLOWLIST",
                  "value": "[parameters('useAllowlist')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_USER",
                  "value": "[parameters('mpsAdminUsername')]"
                },
                {
                  "name": "MPS_WEB_ADMIN_PASSWORD",
                  "value": "[parameters('mpsAdminPassword')]"
                },
                {
                  "name": "MPS_USERNAME",
                  "value": "[parameters('mpsUsername')]"
                },
                {
                  "name": "MPS_PASS",
                  "value": "[parameters('mpsPassword')]"
                }
              ],
              "ports": [
                {
                  "port": 4433
                },
                {
                  "port": 3000
                }
              ]
            }
          },
          {
            "name": "webui",
            "properties": {
              "image": "[concat(parameters('registry'), '/', parameters('sampleWebUIImageName'))]",
              "ports": [
                {
                  "port": 80
                }
              ],
              "environmentVariables": [
                {
                  "name": "MPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/mps')]"
                },
                {
                  "name": "RPS_SERVER",
                  "value": "[concat('https://',parameters('fqdn'), '.', parameters('location'), '.azurecontainer.io:8443/rps')]"
                },
              ],
              "volumeMounts": [
                {
                  "name": "nginx-config",
                  "mountPath": "/etc/nginx/conf.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "vault",
            "properties": {
              "image": "vault:latest",
              "environmentVariables": [
                {
                  "name": "VAULT_DEV_ROOT_TOKEN_ID",
                  "value": "[parameters('vaultToken')]"
                },
                {
                  "name": "VAULT_DEV_LISTEN_ADDRESS",
                  "value": "0.0.0.0:8200"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "kong",
            "properties": {
              "image": "kong:latest",
              "ports": [
                {
                  "port": 8443
                }
              ],
              "command": [
                "kong",
                "start",
                "--vv"
              ],
              "environmentVariables": [
                {
                  "name": "KONG_DATABASE",
                  "value": "off"
                },
                {
                  "name": "KONG_CASSANDRA_CONTACT_POINTS",
                  "value": "kong-database"
                },
                {
                  "name": "KONG_ADMIN_LISTEN",
                  "value": "0.0.0.0:8001"
                },
                {
                  "name": "KONG_ADMIN_LISTEN_SSL",
                  "value": "0.0.0.0:8444"
                },
                {
                  "name": "KONG_NGINX_DAEMON",
                  "value": "off"
                },
                {
                  "name": "KONG_DECLARATIVE_CONFIG",
                  "value": "/home/kong/kong.yaml"
                },
                {
                  "name": "KONG_LOG_LEVEL",
                  "value": "debug"
                }
              ],
              "volumeMounts": [
                {
                  "name": "kong-config",
                  "mountPath": "/home/kong/"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          },
          {
            "name": "db",
            "properties": {
              "image": "postgres:latest",
              "ports": [
                {
                  "port": 5432
                }
              ],
              "environmentVariables": [
                {
                  "name": "POSTGRES_DB",
                  "value": "rpsdb"
                },
                {
                  "name": "POSTGRES_USER",
                  "value": "postgresadmin"
                },
                {
                  "name": "POSTGRES_PASSWORD",
                  "value": "admin123"
                }
              ],
              "volumeMounts": [
                {
                  "name": "db-config",
                  "mountPath": "/docker-entrypoint-initdb.d"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": 0.5,
                  "memoryInGb": 1.0
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "OnFailure",
        "imageRegistryCredentials": [
          {
            "server": "[parameters('registry')]",
            "username": "[parameters('registryUsername')]",
            "password": "[parameters('registryPassword')]"
          }
        ],
        "ipAddress": {
          "ip": "168.61.3.88",
          "dnsNameLabel": "[parameters('fqdn')]",
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": 4433
            },
            {
              "protocol": "tcp",
              "port": 80
            },
            {
              "protocol": "tcp",
              "port": 8443
            }
          ]
        },
        "volumes": [
          {
            "name": "db-config",
            "secret": {
              "init.sql": "Q1JFQVRFIEVYVEVOU0lPTiBJRiBOT1QgRVhJU1RTIGNpdGV4dDsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgY2lyYWNvbmZpZ3MoCiAgICAgIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0IE5PVCBOVUxMLAogICAgICBtcHNfc2VydmVyX2FkZHJlc3MgdmFyY2hhcigyNTYpLAogICAgICBtcHNfcG9ydCBpbnRlZ2VyLAogICAgICB1c2VyX25hbWUgdmFyY2hhcig0MCksCiAgICAgIHBhc3N3b3JkIHZhcmNoYXIoNjMpLAogICAgICBjb21tb25fbmFtZSB2YXJjaGFyKDI1NiksCiAgICAgIHNlcnZlcl9hZGRyZXNzX2Zvcm1hdCBpbnRlZ2VyLCAKICAgICAgYXV0aF9tZXRob2QgaW50ZWdlciwgCiAgICAgIG1wc19yb290X2NlcnRpZmljYXRlIHRleHQsIAogICAgICBwcm94eWRldGFpbHMgdGV4dCwKICAgICAgQ09OU1RSQUlOVCBjb25maWduYW1lIFVOSVFVRShjaXJhX2NvbmZpZ19uYW1lKQogICAgKTsKQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgbmV0d29ya2NvbmZpZ3MoCiAgICAgIG5ldHdvcmtfcHJvZmlsZV9uYW1lIGNpdGV4dCBOT1QgTlVMTCwKICAgICAgZGhjcF9lbmFibGVkIEJPT0xFQU4gTk9UIE5VTEwsCiAgICAgIHN0YXRpY19pcF9zaGFyZWQgQk9PTEVBTiBOT1QgTlVMTCwKICAgICAgaXBfc3luY19lbmFibGVkIEJPT0xFQU4gTk9UIE5VTEwsCiAgICAgIENPTlNUUkFJTlQgbmV0d29ya3Byb2ZpbGVuYW1lIFVOSVFVRShuZXR3b3JrX3Byb2ZpbGVfbmFtZSkKICAgICk7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIHByb2ZpbGVzKAogICAgICBwcm9maWxlX25hbWUgY2l0ZXh0IE5PVCBOVUxMLAogICAgICBhY3RpdmF0aW9uIHZhcmNoYXIoMjApIE5PVCBOVUxMLAogICAgICBhbXRfcGFzc3dvcmQgdmFyY2hhcig0MCksCiAgICAgIGNvbmZpZ3VyYXRpb25fc2NyaXB0IHRleHQsCiAgICAgIGNpcmFfY29uZmlnX25hbWUgY2l0ZXh0IFJFRkVSRU5DRVMgY2lyYWNvbmZpZ3MoY2lyYV9jb25maWdfbmFtZSksCiAgICAgIGdlbmVyYXRlX3JhbmRvbV9wYXNzd29yZCBCT09MRUFOIE5PVCBOVUxMLAogICAgICByYW5kb21fcGFzc3dvcmRfY2hhcmFjdGVycyB2YXJjaGFyKDEwMCksCiAgICAgIHJhbmRvbV9wYXNzd29yZF9sZW5ndGggaW50ZWdlciwKICAgICAgY3JlYXRpb25fZGF0ZSB0aW1lc3RhbXAsCiAgICAgIGNyZWF0ZWRfYnkgdmFyY2hhcig0MCksCiAgICAgIG5ldHdvcmtfcHJvZmlsZV9uYW1lIGNpdGV4dCBSRUZFUkVOQ0VTIG5ldHdvcmtjb25maWdzKG5ldHdvcmtfcHJvZmlsZV9uYW1lKSwKICAgICAgbWVieF9wYXNzd29yZCB2YXJjaGFyKDQwKSwKICAgICAgZ2VuZXJhdGVfcmFuZG9tX21lYnhfcGFzc3dvcmQgQk9PTEVBTiBOT1QgTlVMTCwKICAgICAgcmFuZG9tX21lYnhfcGFzc3dvcmRfbGVuZ3RoIGludGVnZXIsCiAgICAgIHRhZ3MgdGV4dFtdLAogICAgICBDT05TVFJBSU5UIG5hbWUgVU5JUVVFKHByb2ZpbGVfbmFtZSkKICAgICk7CkNSRUFURSBUQUJMRSBJRiBOT1QgRVhJU1RTIGRvbWFpbnMoCiAgICAgIG5hbWUgY2l0ZXh0IE5PVCBOVUxMLAogICAgICBkb21haW5fc3VmZml4IGNpdGV4dCBOT1QgTlVMTCwKICAgICAgcHJvdmlzaW9uaW5nX2NlcnQgdGV4dCwKICAgICAgcHJvdmlzaW9uaW5nX2NlcnRfc3RvcmFnZV9mb3JtYXQgdmFyY2hhcig0MCksCiAgICAgIHByb3Zpc2lvbmluZ19jZXJ0X2tleSB0ZXh0LAogICAgICBjcmVhdGlvbl9kYXRlIHRpbWVzdGFtcCwKICAgICAgY3JlYXRlZF9ieSB2YXJjaGFyKDQwKSwKICAgICAgQ09OU1RSQUlOVCBkb21haW5uYW1lIFVOSVFVRShuYW1lKSwKICAgICAgQ09OU1RSQUlOVCBkb21haW5zdWZmaXggVU5JUVVFKGRvbWFpbl9zdWZmaXgpCiAgICApOwpDUkVBVEUgVU5JUVVFIElOREVYIGxvd2VyX2NpcmFfY29uZmlnX25hbWVfaWR4IE9OIGNpcmFjb25maWdzICgobG93ZXIoY2lyYV9jb25maWdfbmFtZSkpKTsKQ1JFQVRFIFVOSVFVRSBJTkRFWCBsb3dlcl9uZXR3b3JrX3Byb2ZpbGVfbmFtZV9pZHggT04gbmV0d29ya2NvbmZpZ3MgKChsb3dlcihuZXR3b3JrX3Byb2ZpbGVfbmFtZSkpKTsKQ1JFQVRFIFVOSVFVRSBJTkRFWCBsb3dlcl9wcm9maWxlX25hbWVfaWR4IE9OIHByb2ZpbGVzICgobG93ZXIocHJvZmlsZV9uYW1lKSkpOwpDUkVBVEUgVU5JUVVFIElOREVYIGxvd2VyX25hbWVfc3VmZml4X2lkeCBPTiBkb21haW5zICgobG93ZXIobmFtZSkpLCAobG93ZXIoZG9tYWluX3N1ZmZpeCkpKTsKSU5TRVJUIElOVE8gcHVibGljLm5ldHdvcmtjb25maWdzKAogIG5ldHdvcmtfcHJvZmlsZV9uYW1lLCBkaGNwX2VuYWJsZWQsIHN0YXRpY19pcF9zaGFyZWQsIGlwX3N5bmNfZW5hYmxlZCkgCiAgdmFsdWVzKCdkaGNwX2Rpc2FibGVkJywgZmFsc2UsIHRydWUsIHRydWUpOwpJTlNFUlQgSU5UTyBwdWJsaWMubmV0d29ya2NvbmZpZ3MoCiAgbmV0d29ya19wcm9maWxlX25hbWUsIGRoY3BfZW5hYmxlZCwgc3RhdGljX2lwX3NoYXJlZCwgaXBfc3luY19lbmFibGVkKSAgCiAgdmFsdWVzKCdkaGNwX2VuYWJsZWQnLCB0cnVlLCBmYWxzZSwgdHJ1ZSk7CkNSRUFURSBEQVRBQkFTRSBtcHNkYjsKClxjb25uZWN0IG1wc2RiCgpDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBkZXZpY2VzKAogICAgICBndWlkIHV1aWQgTk9UIE5VTEwsCiAgICAgIHRhZ3MgdGV4dFtdLAogICAgICBob3N0bmFtZSB2YXJjaGFyKDI1NiksCiAgICAgIENPTlNUUkFJTlQgZGV2aWNlX2d1aWQgVU5JUVVFKGd1aWQpCiAgICApOyA="
            }
          },
          {
            "name": "nginx-config",
            "secret": {
              "nginx.conf": "c2VydmVyIHsNCiAgICBsaXN0ZW4gODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgbGlzdGVuIFs6Ol06ODAgZGVmYXVsdF9zZXJ2ZXI7DQogICAgc2VydmVyX25hbWUgXzsNCiANCg0KICAgIGxvY2F0aW9uIC8gew0KICAgICAgICByb290ICAgL3Vzci9zaGFyZS9uZ2lueC9odG1sOw0KICAgICAgICBpbmRleCAgaW5kZXguaHRtbCBpbmRleC5odG07DQogICAgfQ0KDQogICAgZXJyb3JfcGFnZSAgNDA0ICAgICAgICAgICAgICAvaW5kZXguaHRtbDsNCg0KICAgICMgcmVkaXJlY3Qgc2VydmVyIGVycm9yIHBhZ2VzIHRvIHRoZSBzdGF0aWMgcGFnZSAvNTB4Lmh0bWwNCiAgICAjDQogICAgZXJyb3JfcGFnZSAgIDUwMCA1MDIgNTAzIDUwNCAgLzUweC5odG1sOw0KICAgIGxvY2F0aW9uID0gLzUweC5odG1sIHsNCiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsNCiAgICB9DQp9DQoNCg=="
            }
          },
          {
            "name": "kong-config",
            "secret": {
              "kong.yaml": "IyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KIyBDb3B5cmlnaHQgKGMpIEludGVsIENvcnBvcmF0aW9uIDIwMTgtMjAxOQ0KIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMA0KIyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQojIE1ldGFkYXRhIGZpZWxkcyBzdGFydCB3aXRoIGFuIHVuZGVyc2NvcmUgKF8pDQojIEZpZWxkcyB0aGF0IGRvIG5vdCBzdGFydCB3aXRoIGFuIHVuZGVyc2NvcmUgcmVwcmVzZW50IEtvbmcgZW50aXRpZXMgYW5kIGF0dHJpYnV0ZXMNCg0KIyBfZm9ybWF0X3ZlcnNpb24gaXMgbWFuZGF0b3J5LA0KIyBpdCBzcGVjaWZpZXMgdGhlIG1pbmltdW0gdmVyc2lvbiBvZiBLb25nIHRoYXQgc3VwcG9ydHMgdGhlIGZvcm1hdA0KDQpfZm9ybWF0X3ZlcnNpb246ICIyLjEiDQoNCiMgX3RyYW5zZm9ybSBpcyBvcHRpb25hbCwgZGVmYXVsdGluZyB0byB0cnVlLg0KIyBJdCBzcGVjaWZpZXMgd2hldGhlciBzY2hlbWEgdHJhbnNmb3JtYXRpb25zIHNob3VsZCBiZSBhcHBsaWVkIHdoZW4gaW1wb3J0aW5nIHRoaXMgZmlsZQ0KIyBhcyBhIHJ1bGUgb2YgdGh1bWIsIGxlYXZlIHRoaXMgc2V0dGluZyB0byB0cnVlIGlmIHlvdSBhcmUgaW1wb3J0aW5nIGNyZWRlbnRpYWxzDQojIHdpdGggcGxhaW4gcGFzc3dvcmRzLCB3aGljaCBuZWVkIHRvIGJlIGVuY3J5cHRlZC9oYXNoZWQgYmVmb3JlIHN0b3Jpbmcgb24gdGhlIGRhdGFiYXNlLg0KIyBPbiB0aGUgb3RoZXIgaGFuZCwgaWYgeW91IGFyZSByZWltcG9ydGluZyBhIGRhdGFiYXNlIHdpdGggcGFzc3dvcmRzIGFscmVhZHkgZW5jcnlwdGVkL2hhc2hlZCwNCiMgc2V0IGl0IHRvIGZhbHNlLg0KDQpfdHJhbnNmb3JtOiB0cnVlDQoNCiMgRWFjaCBLb25nIGVudGl0eSAoY29yZSBlbnRpdHkgb3IgY3VzdG9tIGVudGl0eSBpbnRyb2R1Y2VkIGJ5IGEgcGx1Z2luKQ0KIyBjYW4gYmUgbGlzdGVkIGluIHRoZSB0b3AtbGV2ZWwgYXMgYW4gYXJyYXkgb2Ygb2JqZWN0czoNCg0Kc2VydmljZXM6DQotIG5hbWU6IHdlYg0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODANCiAgdGFnczoNCiAgLSB3ZWINCiAgcm91dGVzOg0KICAtIG5hbWU6IHdlYi1yb3V0ZQ0KICAgIHBhdGhzOg0KICAgIC0gLw0KLSBuYW1lOiBtcHMtcmVzdA0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogMzAwMA0KICB0YWdzOg0KICAtIG1wcw0KICByb3V0ZXM6DQogIC0gbmFtZTogbXBzLWxvZ2luLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL21wcy9sb2dpbg0KICAtIG5hbWU6IG1wcy1yZWxheS1yb3V0ZQ0KICAgIHN0cmlwX3BhdGg6IHRydWUNCiAgICBwYXRoczoNCiAgICAtIC9tcHMvd3MNCiAgLSBuYW1lOiBtcHMtcm91dGUNCiAgICBzdHJpcF9wYXRoOiB0cnVlDQogICAgcGF0aHM6DQogICAgLSAvbXBzDQoNCi0gbmFtZTogcnBzLXJlc3QNCiAgaG9zdDogMTI3LjAuMC4xDQogIHBvcnQ6IDgwODEgIA0KICB0YWdzOg0KICAtIHJwcw0KICByb3V0ZXM6DQogIC0gbmFtZTogcnBzLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL3Jwcw0KDQotIG5hbWU6IHJwcy13cw0KICBob3N0OiAxMjcuMC4wLjENCiAgcG9ydDogODA4MA0KICB0YWdzOg0KICAtIHJwcw0KICByb3V0ZXM6DQogIC0gbmFtZTogcnBzLWFjdGl2YXRlLXJvdXRlDQogICAgc3RyaXBfcGF0aDogdHJ1ZQ0KICAgIHBhdGhzOg0KICAgIC0gL2FjdGl2YXRlDQoNCnBsdWdpbnM6DQotIG5hbWU6IGp3dA0KICBzZXJ2aWNlOiBycHMtcmVzdA0KICBjb25maWc6DQogICAgY2xhaW1zX3RvX3ZlcmlmeToNCiAgICAtIGV4cA0KLSBuYW1lOiBqd3QNCiAgcm91dGU6IG1wcy1yb3V0ZQ0KICBjb25maWc6DQogICAgY2xhaW1zX3RvX3ZlcmlmeToNCiAgICAtIGV4cA0KDQpjb25zdW1lcnM6DQogIC0gdXNlcm5hbWU6IGFkbWluDQpqd3Rfc2VjcmV0czoNCiAgLSBjb25zdW1lcjogYWRtaW4NCiAgICBrZXk6IDlFbVJKVGJJaUliNGJJZVNzbWdjV0lqclI2SHlFVHFjICNzYW1wbGUga2V5DQogICAgc2VjcmV0OiAic3VwZXJzZWNyZXQiICANCg0KDQoNCiMgcm91dGVzOg0KIyAtIG5hbWU6IGFub3RoZXItcm91dGUNCiMgICAjIFJlbGF0aW9uc2hpcHMgY2FuIGFsc28gYmUgc3BlY2lmaWVkIGJldHdlZW4gdG9wLWxldmVsIGVudGl0aWVzLA0KIyAgICMgZWl0aGVyIGJ5IG5hbWUgb3IgYnkgaWQNCiMgICBzZXJ2aWNlOiBleGFtcGxlLXNlcnZpY2UNCiMgICBob3N0czogWyJoZWxsby5jb20iXQ0KDQojIGNvbnN1bWVyczoNCiMgLSB1c2VybmFtZTogZXhhbXBsZS11c2VyDQojICAgIyBDdXN0b20gZW50aXRpZXMgZnJvbSBwbHVnaW4gY2FuIGFsc28gYmUgc3BlY2lmaWVkDQojICAgIyBJZiB0aGV5IHNwZWNpZnkgYSBmb3JlaWduLWtleSByZWxhdGlvbnNocCwgdGhleSBjYW4gYWxzbyBiZSBuZXN0ZWQNCiMgICBrZXlhdXRoX2NyZWRlbnRpYWxzOg0KIyAgIC0ga2V5OiBteS1rZXkNCiMgICBwbHVnaW5zOg0KIyAgIC0gbmFtZTogcmF0ZS1saW1pdGluZw0KIyAgICAgX2NvbW1lbnQ6ICJ0aGVzZSBhcmUgZGVmYXVsdCByYXRlLWxpbWl0cyBmb3IgdXNlciBleGFtcGxlLXVzZXIiDQojICAgICBjb25maWc6DQojICAgICAgIHBvbGljeTogbG9jYWwNCiMgICAgICAgc2Vjb25kOiA1DQojICAgICAgIGhvdXI6IDEwMDAwDQoNCiMgV2hlbiBhbiBlbnRpdHkgaGFzIG11bHRpcGxlIGZvcmVpZ24ta2V5IHJlbGF0aW9uc2hpcHMNCiMgKGUuZy4gYSBwbHVnaW4gbWF0Y2hpbmcgb24gYm90aCBjb25zdW1lciBhbmQgc2VydmljZSkNCiMgaXQgbXVzdCBiZSBzcGVjaWZpZWQgYXMgYSB0b3AtbGV2ZWwgZW50aXR5LCBhbmQgbm90IHRocm91Z2gNCiMgbmVzdGluZy4NCg0KIyBwbHVnaW5zOg0KIyAtIG5hbWU6IHJhdGUtbGltaXRpbmcNCiMgICBjb25zdW1lcjogZXhhbXBsZS11c2VyDQojICAgc2VydmljZTogYW5vdGhlci1zZXJ2aWNlDQojICAgX2NvbW1lbnQ6ICJleGFtcGxlLXVzZXIgaXMgZXh0cmEgbGltaXRlZCB3aGVuIHVzaW5nIGFub3RoZXItc2VydmljZSINCiMgICBjb25maWc6DQojICAgICBob3VyOiAyDQojICAgIyB0YWdzIGFyZSBmb3IgeW91ciBvcmdhbml6YXRpb24gb25seSBhbmQgaGF2ZSBubyBtZWFuaW5nIGZvciBLb25nOg0KIyAgIHRhZ3M6DQojICAgLSBleHRyYV9saW1pdHMNCiMgICAtIG15X3RhZw0K"
            }
          },
          {
            "name": "private",
            "emptyDir": {}
          }
        ]
      }
    }
  ]
}