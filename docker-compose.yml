#/*********************************************************************
# Copyright (c) Intel Corporation 2020
# SPDX-License-Identifier: Apache-2.0
#**********************************************************************/
version: '3.3'
services: 
  webui:
    image: ${WEBUI_IMAGE}    
    networks:
      - openamtnetwork
    build:
      context: ./sample-web-ui
      dockerfile: ./Dockerfile
    environment:
      NODE_ENV: production
      RPS_SERVER: https://${MPS_COMMON_NAME}:8081
      MPS_SERVER: https://${MPS_COMMON_NAME}:3000
      RPSXAPIKEY: ${RPS_XAPIKEY}
      MPSXAPIKEY: ${MPS_XAPIKEY}
    volumes:
      - ./sample-web-ui/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${WEBUI_PORT}:80
  rps:
    image: ${RPS_IMAGE}
    networks:
      - openamtnetwork
    build:
      context: ./rps
      dockerfile: ./Dockerfile
    ports: 
      - "${RPSWEBSOCKETPORT}:8080"
      - "${RPSWEBPORT}:8081"
    depends_on: 
      - mps
    env_file:
      - .env
    environment: 
      RPS_USER: ${RPS_MPS_USER}
      RPS_PASSWORD: ${RPS_MPS_PASSWORD}
      RPS_CORS_ORIGIN: http://localhost:${WEBUI_PORT}
      RPS_CORS_HEADERS: ${CORS_HEADERS}
      RPS_CORS_METHODS: ${CORS_METHODS}
      RPS_CORS_ALLOW_CREDENTIALS: ${CORS_ALLOW_CREDENTIALS}
      RPS_MPS_SERVER: https://mps:3000
    volumes:
      - private-volume:/rcs-microservice/private
    command: >
      /bin/bash -c "
        while ! nc -z mps 3000;
        do
          echo waiting for mps;
          sleep 5;
        done;
        echo MPS Running!;
        node ./dist/Index.js;
      "
  mps:
    image: ${MPS_IMAGE}
    networks:
      - openamtnetwork
    build:
      context: ./mps
      dockerfile: ./Dockerfile
    ports: 
      - "${MPSWEBPORT}:3000"
      - "${MPSPORT}:4433"
    env_file:
      - .env
    environment: 
      MPS_USERNAME: ${MPS_USER}
      MPS_PASS: ${MPS_PASSWORD}
      MPS_MPSXAPIKEY: ${MPS_XAPIKEY}
      MPS_CORS_ORIGIN: http://localhost:${WEBUI_PORT}
      MPS_CORS_HEADERS: ${CORS_HEADERS}
      MPS_CORS_METHODS: ${CORS_METHODS}
    volumes:
      - private-volume:/mps-microservice/private
  db:
    image: postgres
    networks:
      - openamtnetwork
    restart: always
    environment:
      POSTGRES_DB: ${RPS_DB_NAME}
      POSTGRES_USER: ${RPS_DB_USER}
      POSTGRES_PASSWORD: ${RPS_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes: 
      - ./data:/docker-entrypoint-initdb.d
  vault:
    image: "vault"
    networks:
      - openamtnetwork
    ports: 
      - "8200:8200"
    environment: 
      VAULT_DEV_ROOT_TOKEN_ID: ${RPS_VAULT_TOKEN}
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
    cap_add: 
      - IPC_LOCK
volumes:
    app-volume:
    private-volume:
networks: 
  openamtnetwork:
    driver: "bridge"
